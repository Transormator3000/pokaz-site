// ===== –ú–û–î–£–õ–¨ 1: –ê–í–¢–û–ù–û–ú–ù–ê–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø =====
(function() {
    // –£–ó–ù–ê–ï–ú –°–í–û–ï –ò–ú–Ø
    const scriptSrc = document.currentScript ? document.currentScript.src : '';
    const scriptName = scriptSrc.split('/').pop().replace('.js', '') || 'slider';
    
    // –°–†–ê–ó–£ –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú–°–Ø –í WAIT –®–õ–Æ–ó–ï
    if (window.LSAMBase) {
        window.LSAMBase.sendToWait(scriptName);
    } else {
        // –ï—Å–ª–∏ LSAMBase –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –∂–¥–µ–º –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º
        const waitForLSAMBase = () => {
            if (window.LSAMBase) {
                window.LSAMBase.sendToWait(scriptName);
            } else {
                setTimeout(waitForLSAMBase, 100);
            }
        };
        waitForLSAMBase();
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Å–∫—Ä–∏–ø—Ç–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
    window.SLIDER_SCRIPT_NAME = scriptName;
    
    console.log(`üè∑Ô∏è –ú–û–î–£–õ–¨ 1: ${scriptName} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ WAIT —à–ª—é–∑–µ`);
})();

// ===== –ú–û–î–£–õ–¨ 2: READY –û–¢–ü–†–ê–í–©–ò–ö =====
const SliderReadyReporter = {
    scriptName: window.SLIDER_SCRIPT_NAME,
    isReported: false,
    
    init() {
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—Ç preloader'–∞
        window.addEventListener(`${this.scriptName}_preload_complete`, () => {
            this.sendReady();
        });
        
        console.log(`üì¶ –ú–û–î–£–õ–¨ 2: ${this.scriptName} READY –æ—Ç–ø—Ä–∞–≤—â–∏–∫ –≥–æ—Ç–æ–≤`);
    },
    
    sendReady() {
        if (this.isReported) return;
        
        this.isReported = true;
        window.LSAMBase.sendToReady(this.scriptName);
        console.log(`‚úÖ –ú–û–î–£–õ–¨ 2: ${this.scriptName} –æ—Ç—á–∏—Ç–∞–ª—Å—è –≤ READY —à–ª—é–∑–µ`);
    }
};

// ===== –ú–û–î–£–õ–¨ 3: PRELOADER (–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê) =====
const SliderPreloader = {
    scriptName: window.SLIDER_SCRIPT_NAME,
    
    init() {
        console.log(`üîÑ –ú–û–î–£–õ–¨ 3: ${this.scriptName} preloader –∑–∞–ø—É—â–µ–Ω`);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã slider'–∞
        this.initializeSliderComponents(() => {
            // –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–≥–Ω–∞–ª–∏–º –º–æ–¥—É–ª—é 2
            this.signalComplete();
        });
    },
    
    initializeSliderComponents(callback) {
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏ slider'–∞
            const modules = {
                container: HeroContainer.init(),
                slider: BackgroundSlider.init(),
                titleMain: HeroTitleMain.init(),
                titleSub: HeroTitleSub.init(),
                advantages: AdvantagesBlock.init(),
                button: ActionButton.init(),
                popup: ContactPopup.init()
            };
            
            // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
            window.SliderModules = modules;
            window.openContactPopup = openContactPopup;
            window.closeContactPopup = closeContactPopup;
            window.forceUnlockScroll = forceUnlockScroll;
            
            console.log('üöÄ –í–°–ï –ú–û–î–£–õ–ò SLIDER –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–´');
            console.log('üì∏ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: 16 —Ñ–æ—Ç–æ –ø—Ä–æ–µ–∫—Ç–æ–≤');
            console.log('‚ú® –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê: 3 –ø—É–Ω–∫—Ç–∞');
            console.log('üì± POPUP: –ù–∞–¥–µ–∂–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–æ–º');
            console.log('‚è±Ô∏è –ê–í–¢–û–ü–†–û–ö–†–£–¢–ö–ê: 5 —Å–µ–∫—É–Ω–¥');
            console.log('üö® –ê–≤–∞—Ä–∏–π–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: window.forceUnlockScroll()');
            
            // –ó–∞–≤–µ—Ä—à–∞–µ–º —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É (–¥–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é)
            setTimeout(() => {
                callback();
            }, 1000);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π slider:', error);
            
            // –ê–≤–∞—Ä–∏–π–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏
            window.forceUnlockScroll = () => {
                document.body.style.position = '';
                document.body.style.top = '';
                document.body.style.left = '';
                document.body.style.right = '';
                document.body.style.overflow = '';
                console.log('üö® –ê–≤–∞—Ä–∏–π–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
            };
            
            // –í—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç—á–∏—Ç—ã–≤–∞–µ–º—Å—è
            callback();
        }
    },
    
    signalComplete() {
        console.log(`üì§ –ú–û–î–£–õ–¨ 3: ${this.scriptName} –∑–∞–≤–µ—Ä—à–µ–Ω, —Å–∏–≥–Ω–∞–ª—é –º–æ–¥—É–ª—é 2`);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –º–æ–¥—É–ª—é 2
        window.dispatchEvent(new CustomEvent(`${this.scriptName}_preload_complete`));
    }
};

/* ===== –ú–û–î–£–õ–¨ 1: –ö–û–ù–¢–ï–ô–ù–ï–† (–ê–í–¢–û–ù–û–ú–ù–´–ô) ===== */
const HeroContainer = {
    element: document.getElementById('heroContainer'),
    
    init() {
        console.log('‚úÖ HeroContainer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return this;
    },

    setHeight(height) {
        if (this.element) {
            this.element.style.height = height + 'px';
            console.log(`üìê –í—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${height}px`);
        }
    },

    setMaxWidth(maxWidth) {
        if (this.element) {
            this.element.style.maxWidth = maxWidth + 'px';
            console.log(`üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${maxWidth}px`);
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 2: –°–õ–ê–ô–î–ï–† (–ê–í–¢–û–ù–û–ú–ù–´–ô) ===== */
const BackgroundSlider = {
    element: document.getElementById('backgroundSlider'),
    container: document.getElementById('slidesContainer'),
    currentSlide: 0,
    slides: [],
    interval: null,
    
    images: [
        'https://s.iimg.su/s/15/gFtHgK1xPYVt0RM5vYGg3DBG5IZM63Tqa5NTsgYn.png',
        'https://rkpanel.ru/assets/Uploads/IMG_1086.JPG',
        'https://rkpanel.ru/assets/Uploads/IMG_7831.JPG',
        'https://rkpanel.ru/assets/Uploads/IMG_7238.JPG',
        'https://rkpanel.ru/assets/Uploads/15.jpg',
        'https://rkpanel.ru/assets/Uploads/Avtomojka-s-oknami.JPG',
        'https://rkpanel.ru/assets/Uploads/cherteg.jpg',
        'https://rkpanel.ru/assets/Uploads/IMG_7830.JPG',
        'https://rkpanel.ru/assets/Uploads/IMG_8136.JPG',
        'https://rkpanel.ru/assets/Uploads/IMG_1677.JPG',
        'https://rkpanel.ru/assets/Uploads/20191224_091457.jpg',
        'https://rkpanel.ru/assets/Uploads/IMG_7468.JPG',
        'https://rkpanel.ru/assets/Uploads/IMG_2562.JPG',
        'https://rkpanel.ru/assets/Uploads/IMG_1903.jpg',
        'https://rkpanel.ru/assets/Uploads/IMG_7148.JPG',
        'https://rkpanel.ru/assets/Uploads/IMG_7792.JPG'
    ],
    
    init() {
        if (this.container) {
            this.createSlides();
            this.startSlideshow();
            console.log(`‚úÖ BackgroundSlider –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω - ${this.images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
        } else {
            console.error('‚ùå BackgroundSlider: slidesContainer –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        return this;
    },
    
    createSlides() {
        this.images.forEach((imageSrc, index) => {
            const slide = document.createElement('div');
            slide.className = 'slide-item';
            slide.style.backgroundImage = `url("${imageSrc}")`;
            slide.style.backgroundSize = 'cover';
            slide.style.backgroundPosition = 'center';
            
            this.container.appendChild(slide);
            this.slides.push(slide);
        });
        
        this.updateSliderPosition();
        console.log(`üñºÔ∏è –°–æ–∑–¥–∞–Ω–æ ${this.slides.length} —Å–ª–∞–π–¥–æ–≤`);
    },
    
    updateSliderPosition() {
        if (this.container) {
            const translateX = -this.currentSlide * 100;
            this.container.style.transform = `translateX(${translateX}%)`;
        }
    },
    
    nextSlide() {
        this.currentSlide = (this.currentSlide + 1) % this.slides.length;
        this.updateSliderPosition();
        console.log(`üîÑ –°–ª–∞–π–¥ ${this.currentSlide + 1} –∏–∑ ${this.slides.length}`);
    },
    
    startSlideshow() {
        if (this.interval) {
            clearInterval(this.interval);
        }
        
        this.interval = setInterval(() => {
            this.nextSlide();
        }, 5000);
        
        console.log('üé¨ –°–ª–∞–π–¥—à–æ—É –∑–∞–ø—É—â–µ–Ω–æ');
    },
    
    stopSlideshow() {
        if (this.interval) {
            clearInterval(this.interval);
            this.interval = null;
            console.log('‚èπÔ∏è –°–ª–∞–π–¥—à–æ—É –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        }
    }
};

/* ===== –ú–û–î–£–õ–¨ 3–ê: –ì–õ–ê–í–ù–´–ô –ó–ê–ì–û–õ–û–í–û–ö (–ü–†–û–°–¢–û–ô) ===== */
const HeroTitleMain = {
    element: document.getElementById('heroTitleMain'),
    textElement: null,
    
    init() {
        if (this.element) {
            this.textElement = this.element.querySelector('.hero-title-main-text');
            console.log('‚úÖ HeroTitleMain –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.warn('‚ö†Ô∏è HeroTitleMain: —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        return this;
    }
};

/* ===== –ú–û–î–£–õ–¨ 3–ë: –ü–û–î–ó–ê–ì–û–õ–û–í–û–ö (–ü–†–û–°–¢–û–ô) ===== */
const HeroTitleSub = {
    element: document.getElementById('heroTitleSub'),
    textElement: null,
    
    init() {
        if (this.element) {
            this.textElement = this.element.querySelector('.hero-title-sub-text');
            console.log('‚úÖ HeroTitleSub –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.warn('‚ö†Ô∏è HeroTitleSub: —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        return this;
    }
};

/* ===== –ú–û–î–£–õ–¨ 4: –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê (–ü–†–û–°–¢–´–ï) ===== */
const AdvantagesBlock = {
    element: document.getElementById('advantagesBlock'),
    
    advantages: [
        '–°–≠–ù–î–í–ò–ß-–ü–ê–ù–ï–õ–ò –ù–ê–ü–†–Ø–ú–£–Æ –û–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–Ø',
        '–°–†–û–ö –ò–ó–ì–û–¢–û–í–õ–ï–ù–ò–Ø - 3 –î–ù–Ø',
        '–ü–†–û–ò–ó–í–û–î–°–¢–í–û –ú–ï–¢–ê–õ–õ–û–ö–û–ù–°–¢–†–£–ö–¶–ò–ô –ò –°–¢–†–û–ò–¢–ï–õ–¨–°–¢–í–û –ó–î–ê–ù–ò–ô –ü–û–î –ö–õ–Æ–ß'
    ],
    
    init() {
        if (this.element) {
            this.createAdvantages();
            console.log('‚úÖ AdvantagesBlock –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.warn('‚ö†Ô∏è AdvantagesBlock: —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        return this;
    },
    
    createAdvantages() {
        this.advantages.forEach((text, index) => {
            const item = document.createElement('div');
            item.className = 'advantage-item';
            
            const span = document.createElement('span');
            span.className = 'advantage-text';
            span.textContent = text;
            
            item.appendChild(span);
            this.element.appendChild(item);
        });
        
        console.log(`üìù –°–æ–∑–¥–∞–Ω–æ ${this.advantages.length} –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤`);
    }
};

/* ===== –ú–û–î–£–õ–¨ 5: –ö–ù–û–ü–ö–ê (–° –û–¢–õ–ê–î–ö–û–ô) ===== */
const ActionButton = {
    element: document.getElementById('actionButton'),
    
    init() {
        if (this.element) {
            this.setupEventListeners();
            console.log('‚úÖ ActionButton –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.warn('‚ö†Ô∏è ActionButton: —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        return this;
    },

    setupEventListeners() {
        this.element.addEventListener('click', (e) => {
            console.log('üî• –ö–õ–ò–ö –ø–æ –∫–Ω–æ–ø–∫–µ! –û—Ç–∫—Ä—ã–≤–∞—é popup...');
            e.preventDefault();
            e.stopPropagation();
            openContactPopup();
        });
        
        this.element.addEventListener('mouseenter', () => {
            this.element.style.transform = 'scale(1.05)';
            this.element.style.backgroundColor = '#e55a32';
        });
        
        this.element.addEventListener('mouseleave', () => {
            this.element.style.transform = 'scale(1)';
            this.element.style.backgroundColor = '#ff6b35';
        });

        this.element.addEventListener('mousedown', () => {
            this.element.style.transform = 'scale(0.95)';
            this.element.style.backgroundColor = '#d44a2b';
        });

        this.element.addEventListener('mouseup', () => {
            if (this.element.matches(':hover')) {
                this.element.style.transform = 'scale(1.05)';
                this.element.style.backgroundColor = '#e55a32';
            } else {
                this.element.style.transform = 'scale(1)';
                this.element.style.backgroundColor = '#ff6b35';
            }
        });
        
        console.log('üéõÔ∏è ActionButton: Event listeners –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
};

/* ===== –ú–û–î–£–õ–¨ 6: –í–°–ü–õ–´–í–ê–Æ–©–ï–ï –û–ö–ù–û (–ú–û–ë–ò–õ–¨–ù–û-–î–†–£–ñ–ï–°–¢–í–ï–ù–ù–û–ï) ===== */
const ContactPopup = {
    overlay: null,
    scrollPosition: 0,
    isOpen: false,
    
    init() {
        this.overlay = document.getElementById('contactPopup');
        
        if (this.overlay) {
            this.setupEventListeners();
            console.log('‚úÖ ContactPopup –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.error('‚ùå ContactPopup: —ç–ª–µ–º–µ–Ω—Ç contactPopup –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }
        
        return this;
    },

    setupEventListeners() {
        this.overlay.addEventListener('click', (e) => {
            if (e.target === this.overlay) {
                this.hide();
            }
        });

        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isOpen) {
                this.hide();
            }
        });

        const closeBtns = this.overlay.querySelectorAll('.close-btn, .popup-close, [data-close-popup]');
        closeBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                this.hide();
            });
        });

        console.log('üéõÔ∏è ContactPopup: Event listeners –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    },

    show() {
        if (!this.overlay || this.isOpen) return;

        console.log('üì± –û—Ç–∫—Ä—ã–≤–∞—é popup (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)...');
        
        // –°–û–•–†–ê–ù–Ø–ï–ú –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞ –ë–û–õ–ï–ï –ù–ê–î–ï–ñ–ù–û
        this.scrollPosition = Math.max(
            window.pageYOffset,
            document.documentElement.scrollTop,
            document.body.scrollTop
        );
        
        console.log(`üìç –°–æ—Ö—Ä–∞–Ω–∏–ª –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞: ${this.scrollPosition}px`);
        
        // –ú–û–ë–ò–õ–¨–ù–û-–î–†–£–ñ–ï–°–¢–í–ï–ù–ù–ê–Ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
        const html = document.documentElement;
        const body = document.body;
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –Ω–∞ html –∏ body
        html.style.overflow = 'hidden';
        html.style.position = 'fixed';
        html.style.width = '100%';
        html.style.top = `-${this.scrollPosition}px`;
        
        body.style.overflow = 'hidden';
        body.style.position = 'fixed';  
        body.style.width = '100%';
        body.style.top = `-${this.scrollPosition}px`;
        
        this.overlay.classList.add('show');
        this.overlay.style.display = 'flex';
        this.isOpen = true;
        
        console.log('‚úÖ Popup –ø–æ–∫–∞–∑–∞–Ω (–º–æ–±–∏–ª—å–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞)');
    },

    hide() {
        if (!this.overlay || !this.isOpen) return;

        console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞—é popup (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)...');
        
        this.overlay.classList.remove('show');
        this.overlay.style.display = 'none';
        this.isOpen = false;
        
        // –ú–û–ë–ò–õ–¨–ù–û-–î–†–£–ñ–ï–°–¢–í–ï–ù–ù–û–ï –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        const html = document.documentElement;
        const body = document.body;
        
        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç–∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        html.style.overflow = '';
        html.style.position = '';
        html.style.width = '';
        html.style.top = '';
        
        body.style.overflow = '';
        body.style.position = '';
        body.style.width = '';
        body.style.top = '';
        
        // –ù–ê–î–ï–ñ–ù–û–ï –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è –º–æ–±–∏–ª–æ–∫
        requestAnimationFrame(() => {
            window.scrollTo(0, this.scrollPosition);
            document.documentElement.scrollTop = this.scrollPosition;
            document.body.scrollTop = this.scrollPosition;
            
            console.log(`üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª —Å–∫—Ä–æ–ª–ª –Ω–∞ –ø–æ–∑–∏—Ü–∏—é: ${this.scrollPosition}px`);
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 100ms
            setTimeout(() => {
                if (window.pageYOffset !== this.scrollPosition) {
                    window.scrollTo(0, this.scrollPosition);
                    console.log('üîÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å–∫—Ä–æ–ª–ª–∞');
                }
            }, 100);
        });
        
        console.log('‚úÖ Popup –∑–∞–∫—Ä—ã—Ç (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)');
    },

    forceUnlock() {
        console.log('üö® –ê–í–ê–†–ò–ô–ù–ê–Ø —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ (–º–æ–±–∏–ª—å–Ω–∞—è)!');
        
        const html = document.documentElement;
        const body = document.body;
        
        // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π
        html.style.overflow = '';
        html.style.position = '';
        html.style.width = '';
        html.style.top = '';
        
        body.style.overflow = '';
        body.style.position = '';
        body.style.width = '';
        body.style.top = '';
        
        if (this.overlay) {
            this.overlay.classList.remove('show');
            this.overlay.style.display = 'none';
        }
        this.isOpen = false;
        
        console.log('üö® –ê–≤–∞—Ä–∏–π–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    }
};

/* ===== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===== */
function openContactPopup() {
    console.log('üåç –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è openContactPopup –≤—ã–∑–≤–∞–Ω–∞');
    ContactPopup.show();
}

function closeContactPopup() {
    console.log('üåç –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è closeContactPopup –≤—ã–∑–≤–∞–Ω–∞');
    ContactPopup.hide();
}

function forceUnlockScroll() {
    console.log('üåç –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è forceUnlockScroll –≤—ã–∑–≤–∞–Ω–∞');
    ContactPopup.forceUnlock();
}

// ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ =====
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Slider: –ó–∞–ø—É—Å–∫–∞—é –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    SliderReadyReporter.init();
    SliderPreloader.init();
});

// ===== –û–¢–õ–ê–î–û–ß–ù–´–ï –§–£–ù–ö–¶–ò–ò =====
function getSliderStatus() {
    console.log('üìä –°–¢–ê–¢–£–° Slider –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:');
    console.log('  ReadyReporter:', SliderReadyReporter.isReported ? '–ì–û–¢–û–í' : '–ñ–î–ï–¢');
    console.log('  LSAMBase:', window.LSAMBase ? window.LSAMBase.getStats() : '–ù–ï –ì–û–¢–û–í');
}

console.log('‚úÖ Slider: –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞');
